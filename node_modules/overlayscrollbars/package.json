{
  "_from": "overlayscrollbars",
  "_id": "overlayscrollbars@1.2.0",
  "_inBundle": false,
  "_integrity": "sha512-BwSqahRtiw9GEcQt/Z+z/6uYH6n7FCrlweoahUcqP4rKJGxwl5ZV1BaoT+waWrlapkmFsd3nx+C2ThSHLNFVKg==",
  "_location": "/overlayscrollbars",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "overlayscrollbars",
    "fetchSpec": "latest",
    "name": "overlayscrollbars",
    "raw": "overlayscrollbars",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/overlayscrollbars/-/overlayscrollbars-1.2.0.tgz",
  "_shasum": "9ae6d2ca0d269e2a2b51effda3951cd6cd7692f4",
  "_spec": "overlayscrollbars",
  "_where": "C:\\xampp\\htdocs\\dir-front-end",
  "author": {
    "name": "Rene Haas | KingSora"
  },
  "bugs": {
    "url": "https://github.com/KingSora/OverlayScrollbars/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "A javascript scrollbar plugin which hides the native scrollbars and provides custom styleable overlay scrollbars, but keeps the native functionality and feeling.",
  "devDependencies": {},
  "files": [
    "LICENSE",
    "README.md",
    "css/OverlayScrollbars.css",
    "css/OverlayScrollbars.min.css",
    "js/OverlayScrollbars.js",
    "js/OverlayScrollbars.min.js",
    "js/jquery.overlayScrollbars.js",
    "js/jquery.overlayScrollbars.min.js"
  ],
  "homepage": "https://kingsora.github.io/OverlayScrollbars",
  "keywords": [
    "custom",
    "frontend",
    "overlayscrollbars",
    "scroll",
    "scrollbar",
    "scrollbars"
  ],
  "license": "MIT",
  "main": "js/OverlayScrollbars.min.js",
  "name": "overlayscrollbars",
  "optionalDependencies": {},
  "readme": "![OverlayScrollbars](https://kingsora.github.io/OverlayScrollbars/img/logo.png)\n\n## OverlayScrollbars\n\nOverlayScrollbars is a javascript scrollbar plugin which hides the native scrollbars and provides custom styleable scrollbars, but keeps the native functionality and feeling.\n\n## Why?\n\nI've created this plugin because I hate ugly and space consuming scrollbars. Similar plugins haven't met my requirements in terms of features, quality, simplicity, license or browser support.\n\n## Goals & Features\n\n - A simple, powerful and good documented API.\n - High browser compatibility (<b>IE8+</b>, <b>Safari6+</b>, <b>Firefox</b>, <b>Opera</b>, <b>Chrome</b> and <b>Edge</b>).\n - Usage of the most recent technologies to ensure maximum efficiency and performance on newer browsers.\n - Can be used without any dependencies or with jQuery.\n - Automatic update detection - after the initialization you don't have to worry about updating.\n - Mouse and touch support.\n - Textarea support.\n - Direction RTL support. (with normalization)\n - Simple and effective scrollbar-styling.\n \n## Demo & Documentation\n\nYou can find a detailed documentation, demos and theme templates [here](https://kingsora.github.io/OverlayScrollbars).\n\n## Dependencies\n\nThe default plugin version doesn't requires any dependencies!\n\n**If you are using the jQuery dependent version it obviously requires [jQuery](https://jquery.com/) to work.**  \nIt was tested with the jQuery versions: 1.9.1, 2.x, 3.x, and it won't work with jQuery slim.\n\n## Download\n\n#### manually\nDownload OverlayScrollbars manually from [Releases](https://github.com/KingSora/OverlayScrollbars/releases).\n\n#### npm\nOverlayScrollbars can be also downloaded from [npm](https://www.npmjs.com/package/overlayscrollbars).\n\n```\nnpm install overlayscrollbars\n```\n\n## Usage\n\n#### HTML\n\nLoad your CSS file(s) before the JS file(s), to prevent unexpected bugs.\n\nInclude **OverlayScrollbars.css** and **OverlayScrollbars.js** to your HTML file.  \n\n```html\n<!-- Plugin CSS -->\n<link type=\"text/css\" href=\"path/to/OverlayScrollbars.css\" rel=\"stylesheet\"/>\n<!-- Plugin JS -->\n<script type=\"text/javascript\" src=\"path/to/OverlayScrollbars.js\"></script>\n```\n\nIf you are using the jQuery version include [jQuery](https://jquery.com/) before the plugin and use **jquery.overlayScrollbars.js**\n\n```html\n<!-- Plugin CSS -->\n<link type=\"text/css\" href=\"path/to/OverlayScrollbars.css\" rel=\"stylesheet\"/>\n<!-- jQuery JS -->\n<script type=\"text/javascript\" src=\"path/to/jquery.js\"></script>\n<!-- Plugin JS -->\n<script type=\"text/javascript\" src=\"path/to/jquery.overlayScrollbars.js\"></script>\n```\n\n#### Javascript\n\nInitialize the plugin after your document has been fully loaded on the desired element.\n\nDefault initialization:\n```js\n$(function() {\n\t//The first argument are the elements to which the plugin shall be initialized\n\t//The second argument has to be at least a empty object or a object with your desired options\n\tOverlayScrollbars(document.querySelectorAll('body'), { });\n});\n```\n\njQuery initialization (will only work with the jQuery version):\n```js\n$(function() {\n\t//The passed argument has to be at least a empty object or a object with your desired options\n\t$('body').overlayScrollbars({ });\n});\n```\n\n## Options\n\nDue to clarity i can't provide all informations here.  \nTake the table below only as a overview of all options.  \n[Please read the much more detailed documentation](https://kingsora.github.io/OverlayScrollbars/#!documentation).  \n\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th align=\"left\" colspan=\"2\">option</th>\n\t\t\t<th align=\"left\">type</th>\n\t\t\t<th align=\"left\">default</th>\n\t\t\t<th align=\"left\">description</th>\n\t\t</tr>\n\t</thead>\n\t<tr>\n\t\t<td colspan=\"2\">className</td>\n\t\t<td>string / null</td>\n\t\t<td><code>\"os-theme-dark\"</code></td>\n\t\t<td>The class name which shall be added to the host element.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">resize</td>\n\t\t<td>string</td>\n\t\t<td><code>\"none\"</code></td>\n\t\t<td>The resize behavior of the host element. This option works exactly like the CSS3 resize property.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">sizeAutoCapable</td>\n\t\t<td>boolean</td>\n\t\t<td><code>true</code></td>\n\t\t<td>Indicates whether the host element is capable of \"auto\" sizes such as: <code>width: auto</code> and <code>height: auto</code>.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">clipAlways</td>\n\t\t<td>boolean</td>\n\t\t<td><code>true</code></td>\n\t\t<td>Indicates whether the content shall be clipped always.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">normalizeRTL</td>\n\t\t<td>boolean</td>\n\t\t<td><code>true</code></td>\n\t\t<td>Indicates whether RTL scrolling shall be normalized.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">paddingAbsolute</td>\n\t\t<td>boolean</td>\n\t\t<td><code>false</code></td>\n\t\t<td>Indicates whether the padding for the content shall be absolute.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">autoUpdate</td>\n\t\t<td>boolean / null</td>\n\t\t<td><code>null</code></td>\n\t\t<td>Indicates whether the plugin instance shall be updated continuously within a update loop.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">autoUpdateInterval</td>\n\t\t<td>number</td>\n\t\t<td><code>33</code></td>\n\t\t<td>The interval in milliseconds in which a auto update shall be performed for this instance.</td>\n\t</tr>\n\t<tr>\n\t\t<th align=\"left\" colspan=\"5\">nativeScrollbarsOverlaid : {</th>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>showNativeScrollbars</td>\n\t\t<td>boolean</td>\n\t\t<td><code>false</code></td>\n\t\t<td>Indicates whether the native overlaid scrollbars shall be visible.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>initialize</td>\n\t\t<td>boolean</td>\n\t\t<td><code>true</code></td>\n\t\t<td>\n\t\t\tIndicates whether the plugin shall be initialized even if the native scrollbars are overlaid.<br>\n\t\t\tIf you initialize the plugin on the body element, I recommend to set this option to false.\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<th align=\"left\" colspan=\"5\">}</th>\n\t</tr>\n\t<tr>\n\t\t<th align=\"left\" colspan=\"5\">overflowBehavior : {</th>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>x</td>\n\t\t<td>string</td>\n\t\t<td><code>\"scroll\"</code></td>\n\t\t<td>The overflow behavior for the x (horizontal) axis.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>y</td>\n\t\t<td>string</td>\n\t\t<td><code>\"scroll\"</code></td>\n\t\t<td>The overflow behavior for the y (vertical) axis.</td>\n\t</tr>\n\t<tr>\n\t\t<th align=\"left\" colspan=\"5\">}</th>\n\t</tr>\n\t<tr>\n\t\t<th align=\"left\" colspan=\"5\">scrollbars : {</th>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>visibility</td>\n\t\t<td>string</td>\n\t\t<td><code>\"auto\"</code></td>\n\t\t<td>The basic visibility of the scrollbars.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>autoHide</td>\n\t\t<td>string</td>\n\t\t<td><code>\"never\"</code></td>\n\t\t<td>The possibility to hide visible scrollbars after a certain action.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>autoHideDelay</td>\n\t\t<td>number</td>\n\t\t<td><code>800</code></td>\n\t\t<td>The possibility to hide visible scrollbars after a certain action.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>dragScrolling</td>\n\t\t<td>boolean</td>\n\t\t<td><code>true</code></td>\n\t\t<td>Defines whether the scrollbar-handle supports drag scrolling.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>clickScrolling</td>\n\t\t<td>boolean</td>\n\t\t<td><code>false</code></td>\n\t\t<td>Defines whether the scrollbar-track supports click scrolling.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>touchSupport</td>\n\t\t<td>boolean</td>\n\t\t<td><code>true</code></td>\n\t\t<td>Indicates whether the scrollbar reacts to touch events.</td>\n\t</tr>\n\t<tr>\n\t\t<th align=\"left\" colspan=\"5\">}</th>\n\t</tr>\n\t<tr>\n\t\t<th align=\"left\" colspan=\"5\">textarea : {</th>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>dynWidth</td>\n\t\t<td>boolean</td>\n\t\t<td><code>false</code></td>\n\t\t<td>Indiactes whether the textarea width will be dynamic (content dependent).</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>dynHeight</td>\n\t\t<td>boolean</td>\n\t\t<td><code>false</code></td>\n\t\t<td>Indiactes whether the textarea height will be dynamic (content dependent).</td>\n\t</tr>\n\t<tr>\n\t\t<th align=\"left\" colspan=\"5\">}</th>\n\t</tr>\n\t<tr>\n\t\t<th align=\"left\" colspan=\"5\">callbacks : {</th>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>onInitialized</td>\n\t\t<td>function / null</td>\n\t\t<td><code>null</code></td>\n\t\t<td>Gets fired after the plugin was initialized. It takes no arguments.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>onInitializationWithdrawn</td>\n\t\t<td>function / null</td>\n\t\t<td><code>null</code></td>\n\t\t<td>Gets fired after the initialization of the plugin was aborted due to the option <code>nativeScrollbarsOverlaid : { initialize : false }</code>. It takes no arguments.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>onDestroyed</td>\n\t\t<td>function / null</td>\n\t\t<td><code>null</code></td>\n\t\t<td>Gets fired after the plugin was destryoed. It takes no arguments.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>onScrollStart</td>\n\t\t<td>function / null</td>\n\t\t<td><code>null</code></td>\n\t\t<td>Gets fired after the user starts scrolling. It takes one argument.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>onScroll</td>\n\t\t<td>function / null</td>\n\t\t<td><code>null</code></td>\n\t\t<td>Gets fired after every scroll. It takes one argument.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>onScrollStop</td>\n\t\t<td>function / null</td>\n\t\t<td><code>null</code></td>\n\t\t<td>Gets fired after the user stops scrolling. It takes one argument.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>onOverflowChanged</td>\n\t\t<td>function / null</td>\n\t\t<td><code>null</code></td>\n\t\t<td>Gets fired after the overflow has changed. It takes one argument.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>onOverflowAmountChanged</td>\n\t\t<td>function / null</td>\n\t\t<td><code>null</code></td>\n\t\t<td>Gets fired after the overflow amount has changed. It takes one argument.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>onDirectionChanged</td>\n\t\t<td>function / null</td>\n\t\t<td><code>null</code></td>\n\t\t<td>Gets fired after the direction has changed. It takes one argument.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>onContentSizeChanged</td>\n\t\t<td>function / null</td>\n\t\t<td><code>null</code></td>\n\t\t<td>Gets fired after the content size has changed. It takes one argument.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>onHostSizeChanged</td>\n\t\t<td>function / null</td>\n\t\t<td><code>null</code></td>\n\t\t<td>Gets fired after the host size or host padding has changed. It takes one argument.</td>\n\t</tr>\n\t<tr>\n\t\t<td></td>\n\t\t<td>onUpdated</td>\n\t\t<td>function / null</td>\n\t\t<td><code>null</code></td>\n\t\t<td>Gets fired after the host size has changed. It takes one argument.</td>\n\t</tr>\n\t<tr>\n\t\t<th align=\"left\" colspan=\"5\">}</th>\n\t</tr>\n</table>\n\n## Methods\n\nClick on the method name to open a more detailed documentation.\n\n#### Instance methods:\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th align=\"left\">name</th>\n\t\t\t<th align=\"left\">description</th>\n\t\t</tr>\n\t</thead>\n\t<tr>\n\t\t<td><b><a href=\"https://kingsora.github.io/OverlayScrollbars/#!documentation/method-options\" target=\"_blank\">.options()</a></b></td>\n\t\t<td>Returns or sets the options of the instance.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">\n\t\t\texample(s):<br> \n\t\t\t<pre lang=\"js\">\n//get options\nvar options = instance.options();\n//set options\ninstance.options({ className : null });</pre>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td><b><a href=\"https://kingsora.github.io/OverlayScrollbars/#!documentation/method-update\" target=\"_blank\">.update()</a></b></td>\n\t\t<td>Updates the instance.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">\n\t\t\texample(s):<br> \n\t\t\t<pre lang=\"js\">\n//soft update\ninstance.update();\n//hard update\ninstance.update(true);</pre>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td><b><a href=\"https://kingsora.github.io/OverlayScrollbars/#!documentation/method-sleep\" target=\"_blank\">.sleep()</a></b></td>\n\t\t<td>Disables every observation of the DOM and puts the instance to \"sleep\". This behavior can be reset by calling the <code>update()</code> method.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">\n\t\t\texample(s):<br> \n\t\t\t<pre lang=\"js\">\n//put the instance to sleep\ninstance.sleep();</pre>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td><b><a href=\"https://kingsora.github.io/OverlayScrollbars/#!documentation/method-scroll\" target=\"_blank\">.scroll()</a></b></td>\n\t\t<td>Returns the scroll information or sets the scroll position.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">\n\t\t\texample(s):<br> \n\t\t\t<pre lang=\"js\">\n//get scroll information\nvar scrollInfo = instance.scroll();\n\n//scroll 50px on both axis\ninstance.scroll(50);\n\n//add 10px to the scroll offset of each axis\ninstance.scroll({ x : \"+=10\", y : \"+=10\" });\n\n//scroll to 50% on both axis with a duration of 1000ms\ninstance.scroll({ x : \"50%\", y : \"50%\" }, 1000);\n\n\n//scroll to the passed element with a duration of 1000ms\ninstance.scroll($(selector), 1000);</pre>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td><b><a href=\"https://kingsora.github.io/OverlayScrollbars/#!documentation/method-scrollstop\" target=\"_blank\">.scrollStop()</a></b></td>\n\t\t<td>Stops the current scroll-animation.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">\n\t\t\texample(s):<br> \n\t\t\t<pre lang=\"js\">\n//scroll-animation duration is 10 seconds\ninstance.scroll({ y : \"100%\" }, 10000);\n//abort the 10 seconds scroll-animation immediately\ninstance.scrollStop();\n//scroll-animation duration is 1 second\ninstance.scroll({ y : \"100%\" }, 1000);</pre>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td><b><a href=\"https://kingsora.github.io/OverlayScrollbars/#!documentation/method-getelements\" target=\"_blank\">.getElements()</a></b></td>\n\t\t<td>Returns all relevant elements.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">\n\t\t\texample(s):<br> \n\t\t\t<pre lang=\"js\">\n//get the element to which the plugin was applied\nvar pluginTarget = instance.getElements().target;</pre>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td><b><a href=\"https://kingsora.github.io/OverlayScrollbars/#!documentation/method-getstate\" target=\"_blank\">.getState()</a></b></td>\n\t\t<td>Returns a object which describes the current state of this instance.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">\n\t\t\texample(s):<br> \n\t\t\t<pre lang=\"js\">\n//get the state of the plugin instance\nvar pluginState = instance.getState();</pre>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td><b><a href=\"https://kingsora.github.io/OverlayScrollbars/#!documentation/method-destroy\" target=\"_blank\">.destroy()</a></b></td>\n\t\t<td>Destroys and disposes the current instance and removes all added elements form the DOM.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">\n\t\t\texample(s):<br> \n\t\t\t<pre lang=\"js\">\n//destroy the instance\ninstance.destroy();</pre>\n\t\t</td>\n\t</tr>\n</table>\n\n#### Global methods:\n\n<table>\n\t<thead>\n\t\t<tr>\n\t\t\t<th align=\"left\">name</th>\n\t\t\t<th align=\"left\">description</th>\n\t\t</tr>\n\t</thead>\n\t<tr>\n\t\t<td><b><a href=\"https://kingsora.github.io/OverlayScrollbars/#!documentation/gmethod-defaultoptions\" target=\"_blank\">OverlayScrollbars.defaultOptions()</a></b></td>\n\t\t<td>Returns or Sets the default options for each new plugin initialization.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">\n\t\t\texample(s):<br> \n\t\t\t<pre lang=\"js\">\n//get the current defaultOptions\nvar defaultOptions = OverlayScrollbars.defaultOptions();\n//set new default options\nOverlayScrollbars.defaultOptions({\n\tclassName : \"my-custom-class\",\n\tresize    : \"both\"\n});</pre>\n\t\t</td>\n\t</tr>\n\t<tr>\n\t\t<td><b><a href=\"https://kingsora.github.io/OverlayScrollbars/#!documentation/gmethod-getglobals\" target=\"_blank\">OverlayScrollbars.globals()</a></b></td>\n\t\t<td>Returns a plain object which contains global information about the plugin and each instance of it.</td>\n\t</tr>\n\t<tr>\n\t\t<td colspan=\"2\">\n\t\t\texample(s):<br> \n\t\t\t<pre lang=\"js\">\n//get the global information\nvar globals = OverlayScrollbars.globals();</pre>\n\t\t</td>\n\t</tr>\n</table>\n\n## Future Plans\n\n - Minimize the code as much as possible.\n - Frequent updates in terms of bugsfixes and enhancements.\n\n## License\n\nMIT \n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/KingSora/OverlayScrollbars.git"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.2.0"
}
