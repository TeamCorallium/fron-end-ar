{
  "_from": "angular-image-cropper",
  "_id": "angular-image-cropper@1.2.0",
  "_inBundle": false,
  "_integrity": "sha1-DzRsRMymDIRziYk7Ad8gtcwM3Yo=",
  "_location": "/angular-image-cropper",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "angular-image-cropper",
    "fetchSpec": "latest",
    "name": "angular-image-cropper",
    "raw": "angular-image-cropper",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/angular-image-cropper/-/angular-image-cropper-1.2.0.tgz",
  "_shasum": "0f346c44cca60c847389893b01df20b5cc0cdd8a",
  "_spec": "angular-image-cropper",
  "_where": "C:\\xampp\\htdocs\\dir-front-end",
  "author": {
    "email": "contact@benjamincabanes.com",
    "name": "Benjamin Cabanes",
    "url": "http://benjamincabanes.com/"
  },
  "bugs": {
    "url": "https://github.com/bcabanes/angular-image-cropper/issues"
  },
  "bundleDependencies": false,
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    },
    "ghooks": {
      "pre-commit": "npm run test:single && npm run check-coverage"
    }
  },
  "dependencies": {
    "angular": "1.4.9",
    "semantic-release-cli": "^3.0.3"
  },
  "deprecated": false,
  "description": "AngularJS directive for cropping images (responsive|touch).",
  "devDependencies": {
    "angular-mocks": "1.4.9",
    "chai": "^4.1.1",
    "codecov.io": "^0.1.6",
    "commitizen": "^2.9.6",
    "css-loader": "^0.28.7",
    "cz-conventional-changelog": "^2.0.0",
    "ghooks": "^2.0.0",
    "istanbul-instrumenter-loader": "0.2.0",
    "karma": "^1.7.1",
    "karma-chai": "^0.1.0",
    "karma-coverage": "^1.1.1",
    "karma-mocha": "^1.3.0",
    "karma-phantomjs-launcher": "^1.0.4",
    "karma-webpack": "^2.0.4",
    "mocha": "^3.5.0",
    "node-sass": "^4.5.3",
    "phantomjs-prebuilt": "^2.1.15",
    "sass-loader": "^6.0.6",
    "semantic-release": "^7.0.2",
    "style-loader": "^0.18.2",
    "webpack": "^3.5.5",
    "webpack-dev-server": "^2.7.1"
  },
  "homepage": "https://github.com/bcabanes/angular-image-cropper#readme",
  "keywords": [
    "angularjs",
    "angularjs-module",
    "center",
    "crop",
    "drag",
    "fit",
    "fluid",
    "image",
    "responsive",
    "rotate",
    "touch",
    "zoom"
  ],
  "license": "MIT",
  "main": "dist/angular-image-cropper.js",
  "name": "angular-image-cropper",
  "optionalDependencies": {},
  "readme": "[![travis](https://img.shields.io/travis/bcabanes/angular-image-cropper.svg?style=flat-square)](https://travis-ci.org/bcabanes/angular-image-cropper)\n[![codecov](https://img.shields.io/codecov/c/github/bcabanes/angular-image-cropper.svg?style=flat-square)](https://codecov.io/github/bcabanes/angular-image-cropper)\n[![version](https://img.shields.io/npm/v/angular-image-cropper.svg?style=flat-square)](https://www.npmjs.com/package/angular-image-cropper)\n[![downloads](https://img.shields.io/npm/dm/angular-image-cropper.svg?style=flat-square)](https://www.npmjs.com/package/angular-image-cropper)\n[![MIT License](https://img.shields.io/npm/l/simpsons-names.svg?style=flat-square)](http://opensource.org/licenses/MIT)\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat-square)](https://github.com/semantic-release/semantic-release)\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg?style=flat-square)](http://commitizen.github.io/cz-cli/)\n\n# Angular image cropper\n\n## Live example\n\nTo see a live example, go to the [demo's page](http://bcabanes.github.io/angular-image-cropper/).\n\n## Description\n\nAngular image cropper is inspired of the popular Guillotine jQuery plugin\nthat allows to **drag**, **zoom** or **rotate** an image to select a cropping area.\nLike selecting the display area of a profile picture or avatar.\n\n* **Responsive:** The window (or selection area) is fully responsive (fluid)\n* **Touch support:** Dragging the image also works on touch devices\n* **API:** Provide an API to do more action with code \n* **No needs of jQuery:** Written in pure javascript\n\n## Installation\n\n#### Using [NPM](https://www.npmjs.com/package/angular-image-cropper)\n\n```bash\nnpm install angular-image-cropper\n```\n\n#### Using [Bower](http://bower.io/) (not recommended)\n\n```bash\nbower install https://unpkg.com/angular-image-cropper/bower.zip\n```\n\nOr if you want to install a specific version (e.g: for 1.1.4):\n```bash\nbower install https://unpkg.com/angular-image-cropper@1.1.4/bower.zip --save\n```\n\n## Usage\n\n### Load the required files\n\n#### Using modules\n\nJust require the module when you declare your module's dependencies:\n```javascript\nvar angular = require('angular');\nangular\n  .module('myApp', [require('angular-image-cropper')])\n  .controller(/*...*/);\n```\n\n#### Using script tags\n\nJust import the `angular-image-cropper` javascript file in your `index.html`:\n```html\n<script src=\"/path/to/angular-image-cropper.js\"></script>\n```\n\nAdd the module as dependency to your main application module like this:\n```javascript\nangular.module('myApp', ['imageCropper']);\n```\n\n### The directive\n\n```html\n<image-cropper image-url=\"myImageUrlOrBase64\"\n  width=\"640\"\n  height=\"480\"\n  show-controls=\"true\"\n  fit-on-init=\"false\"\n  center-on-init=\"true\"\n  api=\"getApiFunction\"\n  crop-callback=\"myCallbackFunction\"\n  check-cross-origin=\"false\"\n  zoom-step=\"0.1\"\n  action-labels=\"myButtonLabelsObject\"\n></image-cropper>\n```\n\n#### Options\n\nAngular image cropper comes with some options to simplify your development:\n* `image-url` _string_ Source image that will be cropped, can be an URL or base64\n* `width` _string_ Width of the cropped image\n* `height` _string_ Height of the cropped image\n* `zoom-step` _string_ Zoom step\n* `fit-on-init` _boolean_ Fit the image on cropper initialization (keep the ratio)\n* `center-on-init` _boolean_ Center the image on cropper initialization\n* `show-controls` _boolean_ Display or not the control buttons (`true` by default)\n* `check-cross-origin` _boolean_ Enable cross origin or not\n* `crop-callback` _function_ Function executed with base64 cropped image as argument when when crop control is clicked\n```javascript\nvm.updateResultImage = function(base64) {\n  vm.resultImage = base64;\n  $scope.$apply(); // Apply the changes.\n};\n```\n* `api` _function_ Function executed with cropper's API as argument\n* `action-labels` _object_ Give you the ability to customize button labels by passing an object like\n```javascript\nvm.myButtonLabels = {\n  rotateLeft: ' (rotate left) ',\n  rotateRight: ' (rotate right) ',\n  zoomIn: ' (zoomIn) ',\n  zoomOut: ' (zoomOut) ',\n  fit: ' (fit) ',\n  crop: ' <span class=\"fa fa-crop\">[crop]</span> ' // You can pass html too.\n}\n```\n\n#### Api\n\nAngular image cropper gives you access to the api, you can see an example [here](https://github.com/bcabanes/angular-image-cropper/blob/master/dev/app/app.js):\n```javascript\n// Cropper API available when image is ready.\nvm.getCropperApi = function(api) {\n  api.zoomIn(3);\n  api.zoomOut(2);\n  api.rotate(270);\n  api.fit();\n  vm.resultImage = api.crop();\n};\n```\n* `crop` _function_ return the cropped image in `base64`\n* `fit` _function_ fit the image to the wrapper dimensions (keep the ratio)\n* `rotate` _function_ Apply the rotation with degrees given, should be a modulo of 90 (90, 180, 270, 360), can be negative \n* `zoomIn` _function_ Apply the zoomIn given\n* `zoomOut` _function_ Apply the zoomOut given\n* `remove` _function_ Remove the cropper\n\n## License\n\nThe MIT License (MIT)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bcabanes/angular-image-cropper.git"
  },
  "scripts": {
    "build": "NODE_ENV=production node node_modules/.bin/webpack --progress --colors",
    "check-coverage": "istanbul check-coverage --statements 10 --branches 10 --functions 10 --lines 10",
    "commit": "git-cz",
    "prebuild": "rm -rf dist && mkdir dist",
    "report-coverage": "cat ./coverage/report-lcov/lcov.info | codecov",
    "semantic-release": "semantic-release pre && npm publish && semantic-release post",
    "serve": "node node_modules/.bin/webpack-dev-server --content-base dev --progress --colors",
    "test": "NODE_ENV=test karma start",
    "test:single": "SINGLE_RUN=true NODE_ENV=test karma start"
  },
  "version": "1.2.0"
}
